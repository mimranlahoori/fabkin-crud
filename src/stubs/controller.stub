<?php

namespace {{controllerNamespace}};

use {{modelNamespace}}\{{modelName}};
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use {{requestNamespace}}\{{modelName}}Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\View\View;

class {{modelName}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     */
public function index(Request $request): View
{
    // Dynamic model aur table setup
    $model = {{modelName}}::query();
    $table = (new {{modelName}})->getTable();
    $columns = \Schema::getColumnListing($table);
    $firstColumn = $columns[0] ?? 'id';

    // 🕵️‍♂️ 1. SEARCH
    if ($search = $request->input('search')) {
        $model->where(function ($q) use ($search, $columns, $firstColumn) {
            // pehle first column check karo
            $q->where($firstColumn, 'like', "%{$search}%");

            // agar 'name' aur 'email' exist karte hain to unko bhi include kar lo
            if (in_array('name', $columns)) {
                $q->orWhere('name', 'like', "%{$search}%");
            }
            if (in_array('email', $columns)) {
                $q->orWhere('email', 'like', "%{$search}%");
            }
        });
    }

// 🧱 FILTER (status)
    if (in_array('status', $columns)) {
        if ($status = $request->input('status')) {
            $model->where('status', $status);
        }

        // unique status values for dropdown
        $statuses = {{modelName}}::select('status')
            ->distinct()
            ->pluck('status')
            ->filter() // null ya empty hata dega
            ->values();
    } else {
        $statuses = collect(); // agar table me status column hi nahi hai
    }

    // 🔃 3. SORTING
    $sort = $request->input('sort');
    $direction = $request->input('direction', 'asc');

    if ($sort && in_array($sort, $columns)) {
        $model->orderBy($sort, $direction);
    } else {
        // default sorting by created_at desc agar column hai to
        if (in_array('created_at', $columns)) {
            $model->orderBy('created_at', 'desc');
        }
    }

    // ✅ Pagination
    ${{modelNamePluralLowerCase}} = $model->paginate(10);

    return view('{{modelView}}.index', compact('{{modelNamePluralLowerCase}}', 'search', 'sort', 'direction', 'statuses'))
        ->with('i', ($request->input('page', 1) - 1) * ${{modelNamePluralLowerCase}}->perPage());
}



    /**
     * Show the form for creating a new resource.
     */
    public function create(): View
    {
        ${{modelNameLowerCase}} = new {{modelName}}();

        return view('{{modelView}}.create', compact('{{modelNameLowerCase}}'));
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{modelName}}Request $request): RedirectResponse
    {
        {{modelName}}::create($request->validated());

        return Redirect::route('{{modelRoute}}.index')
            ->with('success', '{{modelName}} created successfully.');
    }

    /**
     * Display the specified resource.
     */
    public function show($id): View
    {
        ${{modelNameLowerCase}} = {{modelName}}::find($id);

        return view('{{modelView}}.show', compact('{{modelNameLowerCase}}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit($id): View
    {
        ${{modelNameLowerCase}} = {{modelName}}::find($id);

        return view('{{modelView}}.edit', compact('{{modelNameLowerCase}}'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{modelName}}Request $request, {{modelName}} ${{modelNameLowerCase}}): RedirectResponse
    {
        ${{modelNameLowerCase}}->update($request->validated());

        return Redirect::route('{{modelRoute}}.index')
            ->with('success', '{{modelName}} updated successfully');
    }

    public function destroy($id): RedirectResponse
    {
        {{modelName}}::find($id)->delete();

        return Redirect::route('{{modelRoute}}.index')
            ->with('success', '{{modelName}} deleted successfully');
    }
}
